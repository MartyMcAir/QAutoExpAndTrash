plugins { // https://docs.gradle.org/current/userguide/java_plugin.html
    id 'java' // https://docs.gradle.org/current/userguide/java_plugin.html
}
group 'org.example'
version '1.0-SNAPSHOT'

// for set java version ...............................................................................
apply plugin: 'java'
version = '14'
sourceCompatibility = 14
targetCompatibility = 14

// for set encoding ...............................................................................
compileJava.options.encoding("UTF-8")
tasks.withType(JavaCompile) {
    options.encoding("UTF-8")
}

repositories {
    mavenCentral()
}

dependencies {
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
//    testImplementation group: 'org.testng', name: 'testng', version: '7.5'
    implementation 'org.testng:testng:7.5'
    implementation 'org.jboss.weld.se:weld-se-core:4.0.2.Final'
}

// for tests
// gradlew clean test -Psuite1
// gradlew test -Psuite1 -Psuite2
def suite1 = project.hasProperty("suite1")
def suite2 = project.hasProperty("suite2")
test {
//    useJUnitPlatform()
    useTestNG(){
        dependsOn cleanTest
        useDefaultListeners = true
        if(suite1) suites "src/test/resources/All_Tests.xml"
        if(suite2) suites "src/test/resources/calcTest.xml"
    }
}

// For WELD ...............................................................................
task copyResources(type: Copy){
    from "${projectDir}/src/main/resources/META-INF"
    into "${buildDir}/classes/java/main/META-INF"
}
processResources.dependsOn(copyResources)

// OR
//sourceSets.main.resources {
//    exclude 'META-INF/beans.xml'
//}
//
//classes {
//    doLast {
//        copy {
//            from('src/main/resources') { include 'META-INF/beans.xml' }
//            into "$buildDir/classes/java/main/"
//        }
//    }
//}